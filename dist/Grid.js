class Grid{constructor(){this.minimumDistance=50,this.margin=50,this.boxes=[],this.possible_pairings_x=[],this.possible_pairings_y=[],this.boxes_complete_status=[],this.boxes_completely_run=!1,this.count_of_points_x=Math.round(getRandomFromInterval(2,5)),this.count_of_points_y=Math.round(getRandomFromInterval(2,5)),this.grid_label=this.count_of_points_x+"x"+this.count_of_points_y,console.log("Grid: "+this.grid_label),this.columns_count=this.count_of_points_x+1,this.row_count=this.count_of_points_y+1,this.boxes_count=this.columns_count*this.row_count,console.log("Grid with "+this.columns_count+" columns, "+this.row_count+" rows, "+this.boxes_count+" boxes and "+this.pairing_count+" planned pairings."),this.pairing_count=Math.floor(getRandomFromInterval(1,4)),console.log("Number of pairing: "+this.pairing_count),this.getPoints(),this.create_unpaired_boxes(),this.scout_possible_pairings();for(var s=0;s<this.pairing_count;s++)this.pairing_count>0&&this.possible_pairings_x.length>0&&this.possible_pairings_y.length>0&&(this.choose_pairing(),this.pair(),this.remove_used_pairs());console.log("The real boxes are:"),console.log(this.boxes),this.create_lines()}getPoints(){this.pointsXPool=[...Array(width).keys()],this.pointsYPool=[...Array(height).keys()];for(var s=this.pointsXPool.length-1;s>=0;s--)(s<=0+this.margin+this.minimumDistance||s>=width-this.margin-this.minimumDistance)&&this.pointsXPool.splice(s,1);for(this.pointsX=[0+this.margin,width-this.margin],s=this.pointsYPool.length-1;s>=0;s--)(s<=0+this.margin+this.minimumDistance||s>=height-this.margin-this.minimumDistance)&&this.pointsYPool.splice(s,1);for(this.pointsY=[0+this.margin,height-this.margin],s=0;s<this.count_of_points_x;s++)this.getSinglePointX();for(s=0;s<this.count_of_points_y;s++)this.getSinglePointY();this.pointsX.sort((function(s,i){return s-i})),this.pointsY.sort((function(s,i){return s-i})),console.log("Coordinates of points on x axis: "+this.pointsX),console.log("Coordinates of points on y axis: "+this.pointsY)}getSinglePointX(){let s=getRandomFromList(this.pointsXPool);for(var i=this.pointsXPool.length-1;i>=0;i--)this.pointsXPool[i]>=s-this.minimumDistance&&this.pointsXPool[i]<=s+this.minimumDistance&&this.pointsXPool.splice(i,1);this.pointsX.push(s)}getSinglePointY(){let s=getRandomFromList(this.pointsYPool);for(var i=this.pointsYPool.length-1;i>=0;i--)this.pointsYPool[i]>=s-this.minimumDistance&&this.pointsYPool[i]<=s+this.minimumDistance&&this.pointsYPool.splice(i,1);this.pointsY.push(s)}create_unpaired_boxes(){this.label_counter=0;for(let s=0;s<this.row_count;s++)for(let i=0;i<this.columns_count;i++){this.label_counter+=1;let t={label:this.label_counter,a:createVector(this.pointsX[i],this.pointsY[s]),b:createVector(this.pointsX[i+1],this.pointsY[s]),c:createVector(this.pointsX[i+1],this.pointsY[s+1]),d:createVector(this.pointsX[i],this.pointsY[s+1])};this.boxes.push(new Box(t))}}scout_possible_pairings(){for(let s=0;s<this.boxes.length;s++)this.boxes[s].label%this.columns_count!=0&&this.possible_pairings_x.push({left:this.boxes[s].label,right:this.boxes[s+1].label}),this.boxes[s].label<=this.boxes.length-this.columns_count&&this.possible_pairings_y.push({left:this.boxes[s].label,right:this.boxes[s+this.columns_count].label});console.log(this.possible_pairings_x.length+" possible combinations for x:"),console.log(this.possible_pairings_x),console.log(this.possible_pairings_y.length+" possible combinations for y: "),console.log(this.possible_pairings_y)}choose_pairing(){fxrand()>=.5?(this.chosen_axis="x",this.chosen=getRandomFromList(this.possible_pairings_x),console.log("Pairing on the x axis with:"),console.log(this.chosen)):(this.chosen_axis="y",this.chosen=getRandomFromList(this.possible_pairings_y),console.log("Pairing on the y axis with:"),console.log(this.chosen))}pair(){let s,i;for(let t of this.boxes)t.label==this.chosen.left?(s={a:t.a,b:t.b,c:t.c,d:t.d},this.left_label=t.label):t.label==this.chosen.right&&(i={a:t.a,b:t.b,c:t.c,d:t.d},this.right_label=t.label);if("x"==this.chosen_axis){let t={label:this.left_label+"+"+this.right_label,a:{x:s.a.x,y:s.a.y},b:{x:i.b.x,y:i.b.y},c:{x:i.c.x,y:i.c.y},d:{x:s.d.x,y:s.d.y}};this.paired_box=new Box(t)}else{let t={label:this.left_label+"+"+this.right_label,a:{x:s.a.x,y:s.a.y},b:{x:s.b.x,y:s.b.y},c:{x:i.c.x,y:i.c.y},d:{x:i.d.x,y:i.d.y}};this.paired_box=new Box(t)}console.log("Adding the newly paired box: "),console.log(this.paired_box),this.boxes.push(this.paired_box),console.log("Remove original boxes from array.");for(var t=this.boxes.length-1;t>=0;t--)this.boxes[t].label==this.left_label&&this.boxes.splice(t,1),this.boxes[t].label==this.right_label&&this.boxes.splice(t,1)}remove_used_pairs(){console.log("Remove used pairs from both pools.");for(var s=this.possible_pairings_x.length-1;s>=0;s--)this.possible_pairings_x[s].left!=this.chosen.left&&this.possible_pairings_x[s].left!=this.chosen.right&&this.possible_pairings_x[s].right!=this.chosen.left&&this.possible_pairings_x[s].right!=this.chosen.right||this.possible_pairings_x.splice(s,1);for(s=this.possible_pairings_y.length-1;s>=0;s--)this.possible_pairings_y[s].left!=this.chosen.left&&this.possible_pairings_y[s].left!=this.chosen.right&&this.possible_pairings_y[s].right!=this.chosen.left&&this.possible_pairings_y[s].right!=this.chosen.right||this.possible_pairings_y.splice(s,1)}create_lines(){let s,i,t;for(let o of this.boxes){let e=getRandomFromList(["x","y","xy","yx"]);console.log(e+" axis randomly chosen."),s=getRandomFromList([0,1]),0==s?(i=PALETTE.hatches[0],t=PALETTE.primaries[1]):(i=PALETTE.hatches[1],t=PALETTE.primaries[0]),o.rothko=new RothkoRect({custom_width:o.c.x-o.a.x,custom_height:o.c.y-o.a.y,posX:o.a.x,posY:o.a.y,elementSizeMin:10,elementSizeMax:50,margin:0,fillColor:t,fillColorNoise:3,fillColorOpacity:10,noStroke:!1,strokeColor:color(PALETTE.rothkoStroke),strokeWeight:1,strokeColorNoise:3,strokeOpacity:ROTHKOSTROKEOPACITY,numberQuantisizer:20}),o.dirtLines=new dirtLines({custom_width:o.c.x-o.a.x,custom_height:o.c.y-o.a.y,margin:0,posX:o.a.x,posY:o.a.y,strokeColor:distortColorNew(color(PALETTE.dirtline),10),strokeWeight:.1,strokeColorNoise:15,numberQuantisizer:15,length:40}),o.dirtCircles=new dirtCircles({custom_width:o.c.x-o.a.x,custom_height:o.c.y-o.a.y,margin:0,posX:o.a.x,posY:o.a.y,fillColor:color(PALETTE.dirtCircles),fillColorNoise:10,numberQuantisizer:100,radiusBase:.75,radiusNoise:.25}),o.hatches=new Hatches(e,o.a,o.c,i,0,0,DISTANCE_BETWEEN_LINES)}}show(){this.boxes_complete_status=[];for(let s of this.boxes)1==frameCount&&(s.rothko.show(),s.dirtLines.show(),s.dirtCircles.show()),s.show(),s.hatches.show(),s.hatches.check_all_complete(),0==this.boxes_completely_run&&this.boxes_complete_status.push(s.hatches.all_lines_complete);this.boxes_completely_run=this.boxes_complete_status.every((s=>!0===s))}}class Box{constructor(s){this.label=s.label,this.a=s.a,this.b=s.b,this.c=s.c,this.d=s.d,this.radiusX=(this.b.x-this.a.x)/2,this.radiusY=(this.d.y-this.a.y)/2,this.center_x=this.a.x+this.radiusX,this.center_y=this.a.y+this.radiusY}show(){MODE>=5&&(push(),rectMode(CENTER),translate(this.center_x,this.center_y),noFill(),strokeWeight(1),stroke(51),rect(0,0,2*this.radiusX,2*this.radiusY),fill(0),ellipse(0,0,2),textFont(font),textSize(20),text(this.label,10,20),pop())}}