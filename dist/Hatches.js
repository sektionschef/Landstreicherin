class Hatches{constructor(t,e,s,i,h,r,o){this.offsetPoint=2,this.brushColorDistort=BRUSHCOLORDISTORT,this.brushColor=i,this.axis=t,this.cornerLeft=e,this.cornerRight=s,this.padding_x=h,this.padding_y=r,this.distance_between_lines=o,this.bodies=[],this.all_lines_complete=!1,this.width=this.cornerRight.x-this.cornerLeft.x,this.height=this.cornerRight.y-this.cornerLeft.y,"x"==this.axis?this.x():"y"==this.axis?this.y():"xy"==this.axis?this.xy():"yx"==this.axis?this.yx():this.axis}x(){let t,e,s;t=(this.cornerRight.y-this.cornerLeft.y-2*this.padding_y)/this.distance_between_lines;for(let i=0;i<t;i++)e=createVector(this.cornerLeft.x+this.padding_x,this.cornerLeft.y+this.padding_y+this.distance_between_lines*i,0),s=createVector(this.cornerRight.x-this.padding_x,this.cornerLeft.y+this.padding_y+this.distance_between_lines*i,0),e.add(this.offsetter()),s.add(this.offsetter()),this.bodies.push(new Brush(e,s,distortColorNew(this.brushColor,this.brushColorDistort)))}y(){let t,e,s;t=Math.round((this.cornerRight.x-this.cornerLeft.x-2*this.padding_x)/this.distance_between_lines);for(let i=0;i<t;i++)e=createVector(this.cornerLeft.x+this.padding_x+this.distance_between_lines*i,this.cornerLeft.y+this.padding_y),s=createVector(this.cornerLeft.x+this.padding_x+this.distance_between_lines*i,this.cornerRight.y-this.padding_x),e.add(this.offsetter()),s.add(this.offsetter()),this.bodies.push(new Brush(e,s,distortColorNew(this.brushColor,this.brushColorDistort)))}xy(){let t,e,s,i;if(i=this.width<this.height?"height":"width","height"==i){t=(this.height-this.width-2*this.padding_x)/this.distance_between_lines;for(let i=0;i<t;i++)e=createVector(this.cornerLeft.x,this.cornerLeft.y+this.distance_between_lines*i,0),s=createVector(this.cornerRight.x,this.cornerLeft.y+(this.cornerRight.x-this.cornerLeft.x)+this.distance_between_lines*i,0),e.add(this.offsetter()),s.add(this.offsetter()),this.bodies.push(new Brush(e,s,distortColorNew(this.brushColor,this.brushColorDistort)))}else{t=(this.width-this.height-2*this.padding_x)/this.distance_between_lines;for(let i=0;i<t;i++)e=createVector(this.cornerLeft.x+this.distance_between_lines*i,this.cornerLeft.y,0),s=createVector(this.cornerLeft.x+this.height+this.distance_between_lines*i,this.cornerRight.y,0),e.add(this.offsetter()),s.add(this.offsetter()),this.bodies.push(new Brush(e,s,distortColorNew(this.brushColor,this.brushColorDistort)))}if("height"==i){t=(this.width-2*this.padding_x)/this.distance_between_lines;for(let i=0;i<t;i++)e=createVector(this.cornerLeft.x,this.cornerLeft.y+(this.height-this.width)+this.distance_between_lines*i),s=createVector(this.cornerRight.x-this.distance_between_lines*i,this.cornerRight.y),e.add(this.offsetter()),s.add(this.offsetter()),this.bodies.push(new Brush(e,s,distortColorNew(this.brushColor,this.brushColorDistort)))}else{t=(this.height-2*this.padding_x)/this.distance_between_lines;for(let i=1;i<t;i++)e=createVector(this.cornerLeft.x,this.cornerLeft.y+this.distance_between_lines*i),s=createVector(this.cornerLeft.x+this.height-this.distance_between_lines*i,this.cornerRight.y),e.add(this.offsetter()),s.add(this.offsetter()),this.bodies.push(new Brush(e,s,distortColorNew(this.brushColor,this.brushColorDistort)))}if("height"==i){t=(this.width-2*this.padding_x)/this.distance_between_lines;for(let i=1;i<t;i++)e=createVector(this.cornerLeft.x+this.distance_between_lines*i,this.cornerLeft.y),s=createVector(this.cornerRight.x,this.cornerRight.y-(this.height-this.width)-this.distance_between_lines*i),e.add(this.offsetter()),s.add(this.offsetter()),this.bodies.push(new Brush(e,s,distortColorNew(this.brushColor,this.brushColorDistort)))}else{t=(this.height-2*this.padding_x)/this.distance_between_lines;for(let i=0;i<t;i++)e=createVector(this.cornerRight.x-this.height+this.distance_between_lines*i,this.cornerLeft.y),s=createVector(this.cornerRight.x,this.cornerRight.y-this.distance_between_lines*i),e.add(this.offsetter()),s.add(this.offsetter()),this.bodies.push(new Brush(e,s,distortColorNew(this.brushColor,this.brushColorDistort)))}}yx(){let t,e,s,i;if(i=this.width<this.height?"height":"width","height"==i){t=(this.height-this.width-2*this.padding_x)/this.distance_between_lines;for(let i=0;i<t;i++)e=createVector(this.cornerLeft.x,this.cornerLeft.y+(this.cornerRight.x-this.cornerLeft.x)+this.distance_between_lines*i,0),s=createVector(this.cornerRight.x,this.cornerLeft.y+this.distance_between_lines*i,0),e.add(this.offsetter()),s.add(this.offsetter()),this.bodies.push(new Brush(e,s,distortColorNew(this.brushColor,this.brushColorDistort)))}else{t=(this.width-this.height)/this.distance_between_lines;for(let i=0;i<t;i++)e=createVector(this.cornerLeft.x+this.distance_between_lines*i,this.cornerRight.y),s=createVector(this.cornerLeft.x+this.height+this.distance_between_lines*i,this.cornerLeft.y),e.add(this.offsetter()),s.add(this.offsetter()),this.bodies.push(new Brush(e,s,distortColorNew(this.brushColor,this.brushColorDistort)))}if("height"==i){t=(this.width-2*this.padding_x)/this.distance_between_lines;for(let i=0;i<t;i++)e=createVector(this.cornerLeft.x,this.cornerLeft.y+this.distance_between_lines*i),s=createVector(this.cornerLeft.x+this.distance_between_lines*i,this.cornerLeft.y),e.add(this.offsetter()),s.add(this.offsetter()),this.bodies.push(new Brush(e,s,distortColorNew(this.brushColor,this.brushColorDistort)))}else{t=(this.height-2*this.padding_x)/this.distance_between_lines;for(let i=0;i<t;i++)e=createVector(this.cornerRight.x-this.height+this.distance_between_lines*i,this.cornerRight.y,0),s=createVector(this.cornerRight.x,this.cornerLeft.y+this.distance_between_lines*i,0),e.add(this.offsetter()),s.add(this.offsetter()),this.bodies.push(new Brush(e,s,distortColorNew(this.brushColor,this.brushColorDistort)))}if("height"==i){t=(this.width-2*this.padding_x)/this.distance_between_lines;for(let i=0;i<t;i++)e=createVector(this.cornerLeft.x+this.distance_between_lines*i,this.cornerRight.y),s=createVector(this.cornerRight.x,this.cornerRight.y-this.width+this.distance_between_lines*i),e.add(this.offsetter()),s.add(this.offsetter()),this.bodies.push(new Brush(e,s,distortColorNew(this.brushColor,this.brushColorDistort)))}else{t=(this.height-2*this.padding_x)/this.distance_between_lines;for(let i=0;i<t;i++)e=createVector(this.cornerLeft.x,this.cornerLeft.y+this.distance_between_lines*i),s=createVector(this.cornerLeft.x+this.distance_between_lines*i,this.cornerLeft.y),e.add(this.offsetter()),s.add(this.offsetter()),this.bodies.push(new Brush(e,s,distortColorNew(this.brushColor,this.brushColorDistort)))}}offsetter(){return createVector(getRandomFromInterval(-this.offsetPoint,this.offsetPoint),getRandomFromInterval(-this.offsetPoint,this.offsetPoint),0)}show(){if(this.check_all_complete(),MODE>=5&&(push(),translate(this.cornerLeft.x+this.width/2,this.cornerLeft.y+this.height/2,0),fill(255,255,255,100),box(this.width,this.height,0),pop()),0==this.all_lines_complete)for(var t of this.bodies)t.update(),t.display()}check_all_complete(){if(0==this.all_lines_complete){for(var t of(this.brushes_alive_status=[],this.bodies))this.brushes_alive_status.push(t.alive);this.all_lines_complete=this.brushes_alive_status.every((t=>!1===t))}}}